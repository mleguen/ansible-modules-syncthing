---

- hosts: syncthing
  vars:
    syncthing_service_user: deploy
    syncthing_folders:
      - path: /srv/data/media
        id: media
        group: staff
        mode: "0775"
      - id: default
        state: absent

  tasks:
    - name: Ensure directories state
      file:
        path:  '{{ item.path }}'
        state: '{{ "absent" if item.state|d("") == "absent" else "directory" }}'
        owner: '{{ syncthing_service_user }}'
        group: '{{ item.group | default("root") }}'
        mode:  '{{ item.mode  | default("0755") }}'
      with_items: "{{ syncthing_folders }}"

    - name: Gather syncthing facts
      syncthing_facts:
        # Mandatory when using Syncthing's default self signed TLS certificate
        validate_certs: false
      become: true
      # To ensure read acess to Syncthing's config.xml for host & API key auto-detection
      become_user: "{{ syncthing_service_user }}"

    - name: Set each machine with a unique id
      set_fact:
        syncthing_ids: []

    - name: Prepare a list of all machine ids
      set_fact:
        syncthing_ids: "{{ syncthing_ids + [ hostvars[item].ansible_facts.syncthing.id ] }}"
      when: inventory_hostname != item
      with_items: "{{ groups['syncthing'] }}"

    - name: Ensure syncthing devices
      syncthing_device:
        id: "{{ hostvars[item].ansible_facts.syncthing.id }}"
        name: "{{ item }}"
      become: yes
      become_user: "{{ syncthing_service_user }}"
      when: inventory_hostname != item
      with_items: "{{ groups['syncthing'] }}"

    - name: Ensure syncthing folders
      syncthing_folder:
        path: "{{ item.path | default(omit) }}"
        id:   "{{ item.id }}"
        devices: "{{ syncthing_ids }}"
        state: "{{ item.state | default('present') }}"
      become: yes
      become_user: "{{ syncthing_service_user }}"
      with_items: "{{ syncthing_folders }}"
